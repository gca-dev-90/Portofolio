@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

/* Tailwind tokens are mapped in tailwind.config.ts (colors.background/foreground) */

/* Enable dark mode only when `.dark` class is present on html */
.dark {
  --background: #0a0a0a;
  --foreground: #ededed;
}

body {
  /* Let Tailwind bg utilities control background-image; keep only text color and font */
  background-color: transparent;
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Orbit interactions */
.orbit-item { --orbit-offset: 0px; transition: transform 150ms ease; }
.orbit-item:hover { --orbit-offset: 28px; }
.orbit-icon { transition: transform .2s ease, filter .2s ease, brightness .2s ease; cursor: pointer; }
.orbit-item:hover .orbit-icon {
  /* brighter and more evident glow */
  filter: drop-shadow(0 0 22px rgba(59, 130, 246, 0.65)) drop-shadow(0 0 10px rgba(167, 139, 250, 0.55));
}
.dark .orbit-item:hover .orbit-icon {
  filter: drop-shadow(0 0 24px rgba(147, 197, 253, 0.7)) drop-shadow(0 0 12px rgba(196, 181, 253, 0.6));
}

/* Floating background skills */
.float-skill {
  position: absolute;
  animation: floatMove var(--duration, 30s) ease-in-out var(--delay, 0s) infinite alternate,
             floatBob var(--bob-duration, 3.5s) ease-in-out var(--bob-delay, 0s) infinite alternate;
  will-change: transform, filter;
  filter: drop-shadow(0 0 8px rgba(0,0,0,0.15));
  transition: transform .2s ease, filter .2s ease, opacity .2s ease;
}

.skill-img { transition: transform .2s ease, filter .2s ease; }
.float-skill:hover .skill-img { transform: scale(1.12); }
.float-skill.focused .skill-img { transform: scale(1.22); filter: drop-shadow(0 0 24px rgba(59,130,246,.6)); }

/* Tooltip bubble + arrow */
.skill-tip { white-space: nowrap; }
.skill-tip::after { content: ""; position: absolute; left: 50%; transform: translateX(-50%); border-style: solid; }
.skill-tip.tip-below::after { top: -8px; border-width: 8px; border-color: transparent transparent rgba(255,255,255,0.9) transparent; }
.skill-tip.tip-above::after { bottom: -8px; border-width: 8px; border-color: rgba(255,255,255,0.9) transparent transparent transparent; }
.float-skill:hover {
  /* Neutral black glow on hover */
  filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.55)) drop-shadow(0 0 14px rgba(0, 0, 0, 0.45));
}
.dark .float-skill:hover {
  filter: drop-shadow(0 0 24px rgba(0, 0, 0, 0.65)) drop-shadow(0 0 14px rgba(0, 0, 0, 0.55));
}

@keyframes floatMove {
  0% { transform: translate(0, 0); }
  100% { transform: translate(var(--dx), var(--dy)); }
}

@keyframes floatBob {
  0%   { transform: rotate(-4deg) scale(1); }
  50%  { transform: rotate(4deg) scale(1.06); }
  100% { transform: rotate(-4deg) scale(1); }
}

/* Pulse ring around hero avatar */
@keyframes pulseRing {
  0%   { transform: translate(-50%, -50%) scale(1); opacity: 0.45; }
  70%  { transform: translate(-50%, -50%) scale(1.35); opacity: 0; }
  100% { transform: translate(-50%, -50%) scale(1.35); opacity: 0; }
}
.pulse-ring {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 9999px;
  pointer-events: none;
}
.pulse-ring::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  border: 2px solid rgba(255,255,255,0.45);
  box-shadow: 0 0 24px rgba(255,255,255,0.35), 0 0 36px rgba(147,197,253,0.25);
  animation: pulseRing 2.8s ease-out infinite;
}
@media (prefers-reduced-motion: reduce) {
  .pulse-ring::before { animation: none; }
}

/* Orbiting glow that waves around the avatar */
@keyframes orbitAround {
  0%   { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}
.orbit-dot {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 9999px;
  pointer-events: none;
  animation: orbitAround 1.2s linear infinite;
}
.orbit-dot::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
  width: 16px;
  height: 16px;
  border-radius: 9999px;
  background: #000;
  box-shadow: none;
}
@media (prefers-reduced-motion: reduce) {
  .orbit-dot { animation: none; }
}

/* Subtle edge shading to darken the right side a bit */
.edge-shade-right {
  background-image: linear-gradient(to right, rgba(0,0,0,0) 55%, rgba(0,0,0,0.05) 78%, rgba(0,0,0,0.10) 100%);
}

/* Gentle background wave motion */
@keyframes waveDrift {
  0%   { transform: translateX(0px) translateY(0px); }
  50%  { transform: translateX(24px) translateY(8px); }
  100% { transform: translateX(0px) translateY(0px); }
}
svg .wave-band { will-change: transform; }
svg .wave-1 { animation: waveDrift 36s ease-in-out infinite; }
svg .wave-2 { animation: waveDrift 28s ease-in-out infinite reverse; }
svg .wave-3 { animation: waveDrift 44s ease-in-out infinite; }
@media (prefers-reduced-motion: reduce) {
  svg .wave-band { animation: none; }
}

/* Mobile/touch adjustments: avoid accidental taps and lighten effects */
@media (hover: none) {
  .float-skill { pointer-events: auto; filter: drop-shadow(0 0 6px rgba(0,0,0,0.12)); }
}

/* Conic gradient background with three grays */
.conic-gray-bg {
  /* light mode */
  background-image: conic-gradient(
    at 50% 20%,
    #f9fafb 0deg,     /* gray-50 */
    #e5e7eb 120deg,   /* gray-200 */
    #d1d5db 240deg,   /* gray-300 */
    #f9fafb 360deg
  ) !important;
  background-attachment: fixed;
}
.dark .conic-gray-bg {
  /* dark mode */
  background-image: conic-gradient(
    at 50% 20%,
    #0b0f19 0deg,     /* near gray-950 */
    #111827 120deg,   /* gray-900 */
    #1f2937 240deg,   /* gray-800 */
    #0b0f19 360deg
  ) !important;
}

/* Typewriter caret */
.typewriter-caret { display: inline-block; margin-left: 2px; animation: caretBlink 1s step-end infinite; }
@keyframes caretBlink { 50% { opacity: 0; } }

/* Reveal (opacity + movement combo) */
.reveal { opacity: 0; transform: translateY(18px) scale(0.98); transition: opacity .6s ease, transform .6s ease; will-change: opacity, transform; }
.reveal.revealed { opacity: 1; transform: translateY(0) scale(1); }

/* Glass-card effect (no color overrides) */
.glass-card {
  /* Keep subtle frosted look, remove dark glows */
  background: linear-gradient(135deg, rgba(255,255,255,0.12), rgba(255,255,255,0.03));
  -webkit-backdrop-filter: blur(12px) saturate(125%) brightness(95%) contrast(105%);
  backdrop-filter: blur(12px) saturate(125%) brightness(95%) contrast(105%);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: inherit;
  box-shadow: none;
  filter: none;
  transition: transform 300ms ease-out;
  will-change: transform;
  position: relative;
  isolation: isolate;
}
.glass-card::before {
  /* Soft inner highlight */
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(120% 80% at 10% 0%, rgba(255,255,255,0.35) 0%, rgba(255,255,255,0.1) 35%, rgba(255,255,255,0) 60%);
  pointer-events: none;
}
.glass-card::after { content: none !important; }
.glass-card:hover {
  transform: perspective(500px) rotateX(0deg) rotateY(12deg) scale(1.03);
}
.glass-card:hover::after { opacity: 0; transform: none; }
.dark .glass-card:hover { filter: none; }
/* Side-card specific hover so they face each other */
.tilt-left .glass-card:hover {
  transform: perspective(700px) rotateY(12deg) rotateX(1deg) scale(1.03);
}
.tilt-right .glass-card:hover {
  transform: perspective(700px) rotateY(-12deg) rotateX(1deg) scale(1.03);
}

/* Disable hover tilt when explicitly requested */
.glass-card.no-tilt:hover { transform: none; }

/* Static tilt wrappers to lean cards toward center */
.tilt-left { transform: perspective(1000px) rotateY(12deg) rotateX(2deg); transform-origin: center; transition: transform 300ms ease; display:block; }
.tilt-right { transform: perspective(1000px) rotateY(-12deg) rotateX(2deg); transform-origin: center; transition: transform 300ms ease; display:block; }
@media (max-width: 768px) {
  .tilt-left, .tilt-right { transform: none; }
}
